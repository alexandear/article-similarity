// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/devchallenge/article-similarity/internal/swagger/models"
)

// GetDuplicateGroupsHandlerFunc turns a function with the right signature into a get duplicate groups handler
type GetDuplicateGroupsHandlerFunc func(GetDuplicateGroupsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDuplicateGroupsHandlerFunc) Handle(params GetDuplicateGroupsParams) middleware.Responder {
	return fn(params)
}

// GetDuplicateGroupsHandler interface for that can handle valid get duplicate groups params
type GetDuplicateGroupsHandler interface {
	Handle(GetDuplicateGroupsParams) middleware.Responder
}

// NewGetDuplicateGroups creates a new http.Handler for the get duplicate groups operation
func NewGetDuplicateGroups(ctx *middleware.Context, handler GetDuplicateGroupsHandler) *GetDuplicateGroups {
	return &GetDuplicateGroups{Context: ctx, Handler: handler}
}

/*GetDuplicateGroups swagger:route GET /duplicate_groups getDuplicateGroups

Get duplicate groups ids.

*/
type GetDuplicateGroups struct {
	Context *middleware.Context
	Handler GetDuplicateGroupsHandler
}

func (o *GetDuplicateGroups) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetDuplicateGroupsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetDuplicateGroupsOKBody get duplicate groups o k body
//
// swagger:model GetDuplicateGroupsOKBody
type GetDuplicateGroupsOKBody struct {

	// duplicate groups
	// Required: true
	DuplicateGroups [][]models.ArticleID `json:"duplicate_groups"`
}

// Validate validates this get duplicate groups o k body
func (o *GetDuplicateGroupsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDuplicateGroups(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDuplicateGroupsOKBody) validateDuplicateGroups(formats strfmt.Registry) error {

	if err := validate.Required("getDuplicateGroupsOK"+"."+"duplicate_groups", "body", o.DuplicateGroups); err != nil {
		return err
	}

	for i := 0; i < len(o.DuplicateGroups); i++ {

		for ii := 0; ii < len(o.DuplicateGroups[i]); ii++ {

		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDuplicateGroupsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDuplicateGroupsOKBody) UnmarshalBinary(b []byte) error {
	var res GetDuplicateGroupsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
